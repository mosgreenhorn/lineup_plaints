import { uniqueId } from './dialogs/utils';
export var filterMissingText = 'Filter rows containing missing values';
export function filterMissingMarkup(bakMissing, idPrefix) {
    var id = uniqueId(idPrefix);
    return "<div class=\"lu-checkbox\"><input type=\"checkbox\" " + (bakMissing ? 'checked="checked"' : '') + " id=\"" + id + "\"><label for=\"" + id + "\" class=\"lu-filter-missing\">" + filterMissingText + "</label></div>";
}
export function filterMissingNumberMarkup(bakMissing, count, idPrefix) {
    var id = uniqueId(idPrefix);
    return "<div class=\"lu-checkbox\"><input type=\"checkbox\" " + (bakMissing ? 'checked="checked"' : '') + " " + (count === 0 ? 'disabled' : '') + " id=\"" + id + "\"><label for=\"" + id + "\" class=\"lu-filter-missing\" " + (count === 0 ? 'class="lu-disabled"' : '') + ">Filter " + count + " missing value rows</label></div>";
}
export function findFilterMissing(node) {
    return node.querySelector('.lu-filter-missing').previousElementSibling;
}
export function updateFilterMissingNumberMarkup(element, count) {
    var checked = element.querySelector('input');
    if (count > 0) {
        element.classList.remove('lu-disabled');
        checked.disabled = false;
    }
    if (!checked.checked) {
        element.lastElementChild.textContent = "Filter " + count + " remaining missing value rows";
    }
}
//# sourceMappingURL=missing.js.map