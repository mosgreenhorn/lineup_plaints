import * as tslib_1 from "tslib";
import Column from '../../model/Column';
import ADialog from './ADialog';
import { uniqueId } from '../../renderer/utils';
import { schemeCategory10 } from 'd3-scale-chromatic';
var RenameDialog = (function (_super) {
    tslib_1.__extends(RenameDialog, _super);
    function RenameDialog(column, dialog) {
        var _this = _super.call(this, dialog, {
            fullDialog: true
        }) || this;
        _this.column = column;
        _this.before = column.getMetaData();
        return _this;
    }
    RenameDialog.prototype.build = function (node) {
        node.classList.add('lu-rename-dialog');
        var id = uniqueId('col');
        node.insertAdjacentHTML('beforeend', "\n      <datalist id=\"" + id + "L\"><option value=\"" + Column.DEFAULT_COLOR + "\"></option>" + schemeCategory10.slice(1).map(function (d) { return "<option>" + d + "</option>"; }).join('') + "</datalist>\n      <input type=\"text\" value=\"" + this.column.label + "\" required autofocus placeholder=\"name\">\n      <input type=\"color\" value=\"" + this.column.color + "\" required placeholder=\"color\" list=\"" + id + "L\">\n      <textarea rows=\"5\" placeholder=\"Description\">" + this.column.description + "</textarea>");
    };
    RenameDialog.prototype.reset = function () {
        this.findInput('input[type="text"]').value = this.before.label;
        this.findInput('input[type="color"]').value = this.before.color || Column.DEFAULT_COLOR;
        this.node.querySelector('textarea').value = this.before.description;
        this.column.setMetaData(this.before);
    };
    RenameDialog.prototype.submit = function () {
        var newValue = this.findInput('input[type="text"]').value;
        var newColor = this.findInput('input[type="color"]').value;
        var newDescription = this.node.querySelector('textarea').value;
        this.column.setMetaData({ label: newValue, color: newColor, description: newDescription });
        return true;
    };
    return RenameDialog;
}(ADialog));
export default RenameDialog;
//# sourceMappingURL=RenameDialog.js.map